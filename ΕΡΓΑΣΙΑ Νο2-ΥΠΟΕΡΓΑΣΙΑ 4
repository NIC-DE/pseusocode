ΑΛΓΟΡΙΘΜΟΣ ΤΑΞΙΝΟΜΗΣΗ

ΣΤΑΘΕΡΕΣ
	SIZE=8, /*Μέγιστο πλήθος στοιχείων προς ταξινόμηση*/
	COUNTING_SIZE=100; /*Μέγιστο μέγεθος πίνακα μέτρησης*/

ΔΕΔΟΜΕΝΑ
	MY_ARRAY: ARRAY[1..SIZE] OF INTEGER; /*Ο πίνακας που θέλουμε να ταξινομήσουμε*/
	N: INTEGER; /*Πλήθος αριθμών<SIZE*/
	K: INTEGER; /*Ο μέγιστος αριθμός των δοσμένων στοιχείων που ορίζει το διάστημα [1..K]*/

/*===========Ερώτημα Α==========*/
ΔΙΑΔΙΚΑΣΙΑ INPUTARRAY(%MY_ARRAY, N)
ΔΙΕΠΑΦΗ
	ΕΙΣΟΔΟΣ
		N: INTEGER; 
	ΕΞΟΔΟΣ
		MY_ARRAY: ARRAY[1..SIZE] OF INTEGER; /*Ο πίνακας στον οποίο εισάγαμε τα στοιχεία */
ΔΕΔΟΜΕΝΑ
	I: INTEGER;
	ΑΡΧΗ
	
	/* Εισαγωγή στοιχείων*/
	ΓΙΑ I:=1 ΕΩΣ N ΕΠΑΝΑΛΑΒΕ
		ΕΠΑΝΑΛΑΒΕ
			ΤΥΠΩΣΕ("ΔΩΣΕ ΤΟΝ ", I,"o ΘΕΤΙΚΟ ΑΡΙΘΜΟ ΜΙΚΡΟΤΕΡΟ Η ΙΣΟ ΤΟΥ ", COUNTING_SIZE);
			ΤΥΠΩΣΕ(EOLN);
			ΔΙΑΒΑΣΕ (MY_ARRAY[I]); /*Εισαγωγή στοιχείου πίνακα */
		ΜΕΧΡΙ ((MY_ARRAY[I]>0) AND (MY_ARRAY[I]<=COUNTING_SIZE)); /*Αμυντικός προγραμματισμός για την εισαγωγή θετικού αριθμού μικρότερου ή ίσου του COUNTING_SIZE*/
	ΓΙΑ-ΤΕΛΟΣ
ΤΕΛΟΣ-ΔΙΑΔΙΚΑΣΙΑΣ

/*===========Ερώτημα Β==========*/
ΔΙΑΔΙΚΑΣΙΑ PRINTARRAY(MY_ARRAY, N)
ΔΙΕΠΑΦΗ
	ΕΙΣΟΔΟΣ
		MY_ARRAY: ARRAY[1..SIZE] OF INTEGER; /*Ο πίνακας που θέλουμε να εκτυπώσουμε*/
		N: INTEGER; /*Το πλήθος των στοιχείων του πίνακα που θα επεξεργαστούμε */
	ΕΞΟΔΟΣ	
		/*Δεν υπάρχει έξοδος*/
ΔΕΔΟΜΕΝΑ
	I: INTEGER;
ΑΡΧΗ
	ΓΙΑ I:= 1 ΕΩΣ N ΕΠΑΝΑΛΑΒΕ
		ΤΥΠΩΣΕ (MY_ARRAY[I], " ") /*Ένα κενό ανάμεσα στις τιμές*/
	ΓΙΑ-ΤΕΛΟΣ
ΤΕΛΟΣ-ΔΙΑΔΙΚΑΣΙΑΣ

/*===========Ερώτημα Γ==========*/
ΣΥΝΑΡΤΗΣΗ MAXIMUM(MY_ARRAY, N):INTEGER 
ΔΙΕΠΑΦΗ
	ΕΙΣΟΔΟΣ
		MY_ARRAY: ARRAY[1..SIZE] OF INTEGER; /*Ο πίνακας που θέλουμε να βρούμε το μέγιστο στοιχείο του */
		N: INTEGER; /*Το πλήθος των στοιχείων του πίνακα που θα επεξεργαστούμε */
	ΕΞΟΔΟΣ
	/*Δεν υπάρχει έξοδος*/
ΔΕΔΟΜΕΝΑ		
	I: INTEGER; /*Βοηθητική μεταβλητή για την προσπέλαση του πίνακα */
	MAX: INTEGER; /*Βοηθητική μεταβλητή για την αποθήκευση του μεγίστου */
ΑΡΧΗ
	MAX:=0;
	ΓΙΑ I:= 1 ΕΩΣ N ΕΠΑΝΑΛΑΒΕ
		ΕΑΝ (MY_ARRAY[I]>MAX) ΤΟΤΕ
			MAX:=MY_ARRAY[I];
		ΕΑΝ-ΤΕΛΟΣ
	ΓΙΑ-ΤΕΛΟΣ
	MAXIMUM:=MAX
ΤΕΛΟΣ-ΣΥΝΑΡΤΗΣΗΣ

/*===========Ερώτημα Δ==========*/
ΔΙΑΔΙΚΑΣΙΑ COUNTINGSORT(%MY_ARRAY, K, N)
ΔΙΕΠΑΦΗ
	ΕΙΣΟΔΟΣ
		MY_ARRAY: ARRAY[1..SIZE] OF INTEGER; /*Ο πίνακας που θέλουμε να ταξινομήσουμε */
		K: INTEGER; /* Το μέγιστο στοιχείο του πίνακα που θα ταξινομήσουμε */
		N: INTEGER; /*Το πλήθος των στοιχείων του πίνακα που θα επεξεργαστούμε */
	ΕΞΟΔΟΣ
		MY_ARRAY: ARRAY[1..SIZE] OF INTEGER;
ΔΕΔΟΜΕΝΑ
	I: INTEGER;
	COUNTING_ARRAY: ARRAY[1..COUNTING_SIZE] OF INTEGER; /* Ο πίνακας μέτρησης */
	SORTED_ARRAY: ARRAY[1..SIZE] OF INTEGER; /*Ο ταξινομημένος πίνακας*/
ΑΡΧΗ
	/* Αρχικοποιούμε τον πίνακα μέτρησης με μηδενικά */
	ΓΙΑ I:= 1 ΕΩΣ K ΕΠΑΝΑΛΑΒΕ
		COUNTING_ARRAY[I]:=0 /*Μηδενισμός του πίνακα μέτρησης COUNTING_ARRAY*/
	ΓΙΑ-ΤΕΛΟΣ
	ΤΥΠΩΣΕ("------------------------------------------", EOLN);
	ΤΥΠΩΣΕ("ΦΑΣΗ 0 - ΜΗΔΕΝΙΣΜΟΣ ΤΟΥ ΠΙΝΑΚΑ ΜΕΤΡΗΣΗΣ", EOLN);
	ΤΥΠΩΣΕ("------------------------------------------", EOLN);
	ΥΠΟΛΟΓΙΣΕ PRINTARRAY(COUNTING_ARRAY, K);
	ΤΥΠΩΣΕ(EOLN);
	
	/*Διαπερνάμε τον αρχικό πίνακα MY_ARRAY από αριστερά προς τα δεξιά και */
	/* όταν βρίσκουμε την τιμή MY_ARRAY[I] */
	/*αυξάνουμε κατά ένα την τιμή του πίνακα μέτρησης COUNTING_ARRAY[MY_ARRAY[I]]*/
	
	ΤΥΠΩΣΕ("------------------------------------------", EOLN);
	ΤΥΠΩΣΕ("ΦΑΣΗ 1 - ΥΠΟΛΟΓΙΣΜΟΣ ΤΟΥ ΠΙΝΑΚΑ ΜΕΤΡΗΣΗΣ", EOLN);
	ΤΥΠΩΣΕ("------------------------------------------", EOLN);

	ΓΙΑ I:= 1 ΕΩΣ N ΕΠΑΝΑΛΑΒΕ
		COUNTING_ARRAY[MY_ARRAY[I]]:=COUNTING_ARRAY[MY_ARRAY[I]]+1
		ΥΠΟΛΟΓΙΣΕ PRINTARRAY(COUNTING_ARRAY,K); 
		ΤΥΠΩΣΕ(EOLN);
	ΓΙΑ-ΤΕΛΟΣ;
	ΤΥΠΩΣΕ("------------------------------------------", EOLN);
	ΤΥΠΩΣΕ("ΦΑΣΗ 2 - ΥΠΟΛΟΓΙΣΜΟΣ ΤΟΥ ΠΙΝΑΚΑ ΜΕΤΡΗΣΗΣ ", EOLN);
	ΤΥΠΩΣΕ("------------------------------------------", EOLN);

	/*Διαπερνάμε τον πίνακα μέτρησης και σε κάθε θέση I θέτουμε την τιμή */
	/*COUNTING_ARRAY[I] + COUNTING_ARRAY[I-1], για 2<=Ι<=K*/
	ΓΙΑ I:= 2 ΕΩΣ K ΕΠΑΝΑΛΑΒΕ
		COUNTING_ARRAY[I]:=COUNTING_ARRAY[I] + COUNTING_ARRAY[I-1]
	ΓΙΑ-ΤΕΛΟΣ

	ΥΠΟΛΟΓΙΣΕ PRINTARRAY(COUNTING_ARRAY,K);

	ΤΥΠΩΣΕ(EOLN);

	ΤΥΠΩΣΕ("------------------------------------------", EOLN);
	ΤΥΠΩΣΕ("ΦΑΣΗ 3 - ΤΑΞΙΝΟΜΗΣΗ", EOLN);
	ΤΥΠΩΣΕ("------------------------------------------", EOLN);

	/*Διαπερνάμε τον αρχικό πίνακα ΠΙΝΑΚΑ MY_ARRAY από δεξιά προς τα αριστερά.*/ 
	/*Έστω ότι είμαστε στη θέση MY_ARRAY[I] και MY_ARRAY[I] = J.*/
	/*Τοποθετούμε την τιμή MY_ARRAY[I] στην κατάλληλη θέση του ταξινομημένου πίνακα SORTED_ARRAY.*/
	/*Δηλαδή στη θέση SORTED_ARRAY[COUNTING_ARRAY[MY_ARRAY[I]]]*/
	/*Μειώνουμε κατά ένα την τιμή του COUNTING_ARRAY[MY_ARRAY[I]]*/
	
	ΓΙΑ I:= N ΕΩΣ 1 ΜΕ-ΒΗΜΑ -1 ΕΠΑΝΑΛΑΒΕ 
		SORTED_ARRAY[COUNTING_ARRAY[MY_ARRAY[I]]] := MY_ARRAY[I];
		COUNTING_ARRAY[MY_ARRAY[I]]:= COUNTING_ARRAY[MY_ARRAY[I]]-1;
	ΓΙΑ-ΤΕΛΟΣ
	
	/*Επιστρέφουμε τον ταξινομημένο πίνακα στον αρχικό πίνακα*/ 
	ΓΙΑ I:= 1 ΕΩΣ N ΕΠΑΝΑΛΑΒΕ
		MY_ARRAY[I]:=SORTED_ARRAY[I];
	ΓΙΑ-ΤΕΛΟΣ
ΤΕΛΟΣ-ΔΙΑΔΙΚΑΣΙΑΣ

/*Κυρίως πρόγραμμα*/
ΑΡΧΗ
	/*===========ΕΡΩΤΗΜΑ Ε==========*/
	/*Αμυντικός προγραμματισμός για την εισαγωγή του πλήθους αριθμών (Ν), θετικού αριθμού μικρότερου ή ίσου του SIZE*/
	ΕΠΑΝΑΛΑΒΕ
		ΤΥΠΩΣΕ("ΔΩΣΕ ΠΛΗΘΟΣ ΑΡΙΘΜΩΝ N, ΟΠΟΥ 0 < N <= ", SIZE);
		ΤΥΠΩΣΕ(EOLN);
		ΔΙΑΒΑΣΕ (N); /*ΕΙΣΑΓΩΓΗ ΠΛΗΘΟΥΣ*/
	ΜΕΧΡΙ ((N>0) AND (N<=SIZE));

	/*Κλήση διαδικασίας για την εισαγωγή Ν τιμών στον πίνακα MY_ARRAY*/
	ΥΠΟΛΟΓΙΣΕ INPUTARRAY(%MY_ARRAY, N);
	
	/*Κλήση συνάρτησης για την εύρεση του μέγιστου των στοιχείων του πίνακα, ώστε να υπολογιστεί το διάστημα [1..K]*/
	K:=MAXIMUM(MY_ARRAY, N);
	ΤΥΠΩΣΕ("------------------------------------------", EOLN);
	ΤΥΠΩΣΕ("ΜΕΓΙΣΤΟΣ = ", K);
	ΤΥΠΩΣΕ(EOLN);
	ΤΥΠΩΣΕ("------------------------------------------", EOLN);
	
	ΤΥΠΩΣΕ("Ο ΑΡΧΙΚΟΣ ΠΙΝΑΚΑΣ ΕΧΕΙ ",N," ΣΤΟΙΧΕΙΑ ΣΤΟ ΔΙΑΣΤΗΜΑ [1..",K,"]:",EOLN);
	/*Κλήση διαδικασίας για την εκτύπωση του πίνακα προς ταξινόμηση MY_ARRAY*/
	ΥΠΟΛΟΓΙΣΕ PRINTARRAY(MY_ARRAY,N);
	ΤΥΠΩΣΕ(EOLN);
	
	/*Κλήση διαδικασίας για την ταξινόμηση του πίνακα MY_ARRAY*/
	ΥΠΟΛΟΓΙΣΕ COUNTINGSORT(%MY_ARRAY, K, N);
	
	/*Κλήση διαδικασίας για την εκτύπωση του ταξινομημένου πίνακα MY_ARRAY*/
	ΤΥΠΩΣΕ("ΤΑΞΙΝΟΜΗΜΕΝΟΣ ΠΙΝΑΚΑΣ", EOLN);
	ΥΠΟΛΟΓΙΣΕ PRINTARRAY(MY_ARRAY,N);
	ΤΥΠΩΣΕ(EOLN);
	ΤΥΠΩΣΕ("ΤΕΛΟΣ ΕΚΤΕΛΕΣΗΣ ΤΟΥ ΠΡΟΓΡΑΜΜΑΤΟΣ");
ΤΕΛΟΣ /*Κυρίως προγράμματος*/


